Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.

 

Example 1:

Input: nums = [3,0,1]
Output: 2
Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.
Example 2:

Input: nums = [0,1]
Output: 2
Explanation: n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.
Example 3:

Input: nums = [9,6,4,2,3,5,7,0,1]
Output: 8
Explanation: n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.

//Idea is to find the sum of all the values in the array and actual value will be n*(n+1)/2 then will subtract actual value - sum of values in array which gives us the missing number.
class Solution {
    public int missingNumber(int[] nums) {
        
        int sum=0;
        int val=nums.length;
        
        for(int i:nums)
        {
            sum+=i;
        }
        int actualsum=(val*(val+1))/2;
        
        return actualsum-sum;
    }
}